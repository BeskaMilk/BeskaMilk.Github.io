{"version":3,"sources":["components/Image.js","components/Images.js","App.js","components/landingpage.js","components/register.js","components/contact.js","components/logIn.js","components/aboutUs.js","components/loggedInMainPage.js","serviceWorker.js","index.js"],"names":["Image","_ref","image","react_default","a","createElement","className","src","urls","thumb","alt","Images","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","images","count","start","fetchImages","console","log","_this$state","setState","axios","get","then","res","data","inherits","createClass","key","value","_this2","_this$state2","react_infinite_scroll_component_lib_default","dataLength","next","hasMore","loader","map","id","Component","App","React","selectedFile","fileSelectedHandler","event","target","files","fileUploadHandler","post","type","onChange","onClick","components_Images","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById"],"mappings":"0OAEe,SAASA,EAATC,GAA0B,IAATC,EAASD,EAATC,MAC5B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,IAAKL,EAAMM,KAAKC,MAAOC,IAAI,KCE7D,IA6CQC,EA7Cf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIQ,MAAO,CACHC,OAAQ,GACRC,MAAO,GACPC,MAAO,GAJflB,EAcImB,YAAc,WACVC,QAAQC,IAAI,KADI,IAAAC,EAEStB,EAAKe,MAAtBE,EAFQK,EAERL,MAAOC,EAFCI,EAEDJ,MACflB,EAAKuB,SAAS,CAACL,MAAOlB,EAAKe,MAAMG,MAAQD,IACzCO,IACKC,IADL,sBAAAX,OAC+BG,EAD/B,WAAAH,OAC8CI,IACzCQ,KAAK,SAAAC,GAAG,OACL3B,EAAKuB,SAAS,CAAEP,OAAQhB,EAAKe,MAAMC,OAAOF,OAAOa,EAAIC,WArBrE5B,EAAA,OAAAC,OAAA4B,EAAA,EAAA5B,CAAAJ,EAAAC,GAAAG,OAAA6B,EAAA,EAAA7B,CAAAJ,EAAA,EAAAkC,IAAA,oBAAAC,MAAA,WAOuB,IAAAC,EAAA9B,KAAA+B,EACU/B,KAAKY,MAAtBE,EADOiB,EACPjB,MAAOC,EADAgB,EACAhB,MACfM,IACKC,IADL,sBAAAX,OAC+BG,EAD/B,WAAAH,OAC8CI,IACzCQ,KAAK,SAAAC,GAAG,OAAIM,EAAKV,SAAS,CAAEP,OAAQW,EAAIC,WAXrD,CAAAG,IAAA,SAAAC,MAAA,WA2BQ,OADAZ,QAAQC,IAAIlB,KAAKY,OAEb1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CACI8C,WAAYjC,KAAKY,MAAMC,OAAOV,OAC9B+B,KAAMlC,KAAKgB,YACXmB,SAAS,EACTC,OAAQlD,EAAAC,EAAAC,cAAA,yBAENY,KAAKY,MAAMC,OAAOwB,IAAI,SAAApD,GAAK,OACzBC,EAAAC,EAAAC,cAACL,EAAD,CAAO6C,IAAK3C,EAAMqD,GAAIrD,MAAOA,YApCrDS,EAAA,CAA4B6C,aCuDbC,GCtDWD,YCJHA,YCADA,YCCFA,YCCEA,YCDSE,IAAMF,qNNOnC3B,MAAQ,CACN8B,aAAc,QAGhBC,oBAAsB,SAAAC,GACpB/C,EAAKuB,SAAS,CACZsB,aAAcE,EAAMC,OAAOC,MAAM,QAIrCC,kBAAoB,WAClB1B,IAAM2B,KAAK,6EAIX,OAEE9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAyBTH,EAAAC,EAAAC,cAAA,SAAO6D,KAAM,OAAOC,SAAUlD,KAAK2C,sBACnCzD,EAAAC,EAAAC,cAAA,UAAQ+D,QAASnD,KAAK+C,mBAAtB,UACA7D,EAAAC,EAAAC,cAACgE,EAAD,cA7CMb,cOGEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,qFCJNC,IAASC,OACRzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,KACD1E,EAAAC,EAAAC,cAACyE,EAAD,OAEGC,SAASC,eAAe","file":"static/js/main.23c893a2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Image({ image }) {\r\n    return <img className='single-photo' src={image.urls.thumb} alt='' />;\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Image from './Image';\r\n\r\nexport class Images extends Component {\r\n    state= {\r\n        images: [],\r\n        count: 30,\r\n        start: 1\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { count, start } = this.state;\r\n        axios\r\n            .get(`/files/image?count=${count}&start=${start}`) //.get(`/api/photos?count=${count}&start=${start}`)\r\n            .then(res => this.setState({ images: res.data }));\r\n    }\r\n\r\n    fetchImages = () => {\r\n        console.log(123);\r\n        const { count, start } = this.state;\r\n        this.setState({start: this.state.start + count});\r\n        axios\r\n            .get(`/files/image?count=${count}&start=${start}`) //.get(`/api/photos?count=${count}&start=${start}`)\r\n            .then(res => \r\n                this.setState({ images: this.state.images.concat(res.data) })\r\n            );\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        return (\r\n            <div className=\"images\">\r\n                <InfiniteScroll\r\n                    dataLength={this.state.images.length}\r\n                    next={this.fetchImages}\r\n                    hasMore={true}\r\n                    loader={<h4>Loading...</h4>}\r\n                >\r\n                    { this.state.images.map(image => (\r\n                        <Image key={image.id} image={image} />\r\n                    )) }\r\n                </InfiniteScroll>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Images\r\n","import React, { Component} from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content, Badge, Icon, Footer, FooterSection, FooterDropDownSection, FooterLinkList } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\nimport Images from './components/Images';\nimport axios from 'axios';\n\n\nclass App extends Component{\n  state = {\n    selectedFile: null\n  }\n\n  fileSelectedHandler = event => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    })\n  }\n\n  fileUploadHandler = () => {\n    axios.post('');\n  }\n  \n  render(){\n    return (\n      \n      <div className=\"demo-big-content\">\n          {/* <Layout>\n           <Header className=\"header-color\" title=\"Matters\" scroll>\n            <Navigation>\n                <Link to=\"/landingPage\">Landing Page</Link>\n                <Link to=\"/aboutUs\">About Us</Link>\n                <Link to=\"/register\">Register</Link>\n                <Link to=\"/logIn\">Log in</Link>\n                <Link to=\"/loggedInMainPage\">Logged in main page</Link>\n                <Link to=\"/contact\">Contact</Link>\n\n                \n                <Badge text=\"1\" overlap>\n                    <Icon name=\"account_box\" />\n                </Badge>\n\n            </Navigation>\n          </Header>  \n\n          <Content>\n          <div className=\"page-content\" />\n              <Main/>\n          </Content>\n\n          </Layout> */}\n            <input type= \"file\" onChange={this.fileSelectedHandler}/>\n            <button onClick={this.fileUploadHandler}>Upload</button>\n            <Images />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport Images from './Images';\r\n\r\n\r\n\r\nclass LandingPage extends Component{\r\n\r\n\trender(){\r\n\t\treturn(\r\n\r\n\r\n\t\t\t\t<div className=\"landing-grid\" id=\"root\">\r\n                <div className=\"hero is-fullheight is-bold is-info\">\r\n                    <div className=\"hero-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"header content\">\r\n                        {/* <h2 className=\"subtitle is-6\">Code Challenge #16</h2>\r\n                        <h1 className=\"title is-1\">\r\n                            Infinite Scroll Unsplash Code Challenge\r\n                        </h1> */}\r\n                        </div>\r\n\r\n                        <Images />\r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\n\r\nclass Register extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div><h1>Please register to start. If you are a partner of a design company, please contact us.</h1></div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div><h1>Contact Page</h1></div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Images from './Images';\r\n\r\nclass LogIn extends Component{\r\n\tfileSelectedHandler = event => {\r\n\t\tconsole.log(event);\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<input type= \"file\" onChange={this.fileSelectedHandler}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default LogIn;","import React, { Component } from 'react';\r\nimport { Footer, FooterSection, FooterDropDownSection, FooterLinkList } from 'react-mdl';\r\n\r\n\r\nclass AboutUs extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div><h1>Matters is a networking community.</h1>\r\n\t\t\t\t{/* ----------------- Footer ----------------- */}\r\n\r\n\t\t\t\t<div className=\"foot\">\r\n\t\t\t\t<Footer size=\"mega\">\r\n\t\t\t\t<FooterSection type=\"middle\">\r\n\t\t\t\t\t<FooterDropDownSection title=\"Features\">\r\n\t\t\t\t\t\t<FooterLinkList>\r\n\t\t\t\t\t\t\t<a href=\"#\">About</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Terms</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Partners</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Updates</a>\r\n\t\t\t\t\t\t</FooterLinkList>\r\n\t\t\t\t\t</FooterDropDownSection>\r\n\t\t\t\t\t<FooterDropDownSection title=\"Details\">\r\n\t\t\t\t\t\t<FooterLinkList>\r\n\t\t\t\t\t\t\t<a href=\"#\">Specs</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Tools</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Resources</a>\r\n\t\t\t\t\t\t</FooterLinkList>\r\n\t\t\t\t\t</FooterDropDownSection>\r\n\t\t\t\t\t<FooterDropDownSection title=\"Technology\">\r\n\t\t\t\t\t\t<FooterLinkList>\r\n\t\t\t\t\t\t\t<a href=\"#\">How it works</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Patterns</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Usage</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Products</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Contracts</a>\r\n\t\t\t\t\t\t</FooterLinkList>\r\n\t\t\t\t\t</FooterDropDownSection>\r\n\t\t\t\t\t<FooterDropDownSection title=\"FAQ\">\r\n\t\t\t\t\t\t<FooterLinkList>\r\n\t\t\t\t\t\t\t<a href=\"#\">Questions</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Answers</a>\r\n\t\t\t\t\t\t\t<a href=\"#\">Contact Us</a>\r\n\t\t\t\t\t\t</FooterLinkList>\r\n\t\t\t\t\t</FooterDropDownSection>\r\n\t\t\t\t</FooterSection>\r\n\t\t\t\t<FooterSection type=\"bottom\" logo=\"Title\">\r\n\t\t\t\t\t<FooterLinkList>\r\n\t\t\t\t\t\t<a href=\"#\">Help</a>\r\n\t\t\t\t\t\t<a href=\"#\">Privacy & Terms</a>\r\n\t\t\t\t\t</FooterLinkList>\r\n\t\t\t\t</FooterSection>\r\n\t\t\t\t</Footer>\r\n\t\t\t\t</div> \r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AboutUs;","import React, { Component } from 'react';\r\nimport { Tabs, Tab, Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, IconButton, CardText } from 'react-mdl';\r\n\r\nclass LoggedInMainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { activeTab: 0 };\r\n\t}\r\n\t\r\n\ttoggleCategories(){\r\n\t\tif(this.state.activeTab === 0){\r\n\t\t\treturn (\r\n\t\t\t\t<div className= \"feedPage\">\r\n\t\t\t\t\t{/* <h1>This is feed page. You can see all the materials and construction team info here. The information your friend company uploaded as well as your own data.</h1> */}\r\n\t\t\t\t\t<Card shadow={5} style={{width: '512px', margin: 'auto'}}>\r\n\t\t\t\t\t\t<CardTitle style={{color: '#fff', height: '176px', background: 'url(http://www.getmdl.io/assets/demos/welcome_card.jpg) center / cover'}}>Welcome</CardTitle>\r\n\t\t\t\t\t\t<CardText>\r\n\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n\t\t\t\t\t\t\tMauris sagittis pellentesque lacus eleifend lacinia...\r\n\t\t\t\t\t\t</CardText>\r\n\t\t\t\t\t\t<CardActions border>\r\n\t\t\t\t\t\t\t<Button colored>Get Started</Button>\r\n\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t<CardMenu style={{color: '#fff'}}>\r\n\t\t\t\t\t\t\t<IconButton name=\"share\" />\r\n\t\t\t\t\t\t</CardMenu>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if(this.state.activeTab === 1){\r\n\t\t\treturn (\r\n\t\t\t\t// <div><h1>This is your data page. You can see all the materials and construction team info that you uploaded here. </h1></div>\r\n\t\t\t\t<Card shadow={0} style={{width: '320px', height: '320px', margin: 'auto'}}>\r\n\t\t\t\t\t<CardTitle expand style={{color: '#fff', background: 'url(http://www.getmdl.io/assets/demos/dog.png) bottom right 15% no-repeat #46B6AC'}}>Update</CardTitle>\r\n\t\t\t\t\t<CardText>\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n\t\t\t\t\t\tAenan convallis.\r\n\t\t\t\t\t</CardText>\r\n\t\t\t\t\t<CardActions border>\r\n\t\t\t\t\t\t<Button colored>View Updates</Button>\r\n\t\t\t\t\t</CardActions>\r\n\t\t\t\t</Card>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if(this.state.activeTab === 2){\r\n\t\t\treturn (\r\n\t\t\t\t<div><h1>This is a wiki page. You'll be able to learn about materials, construction methods and share your knowledges as well.</h1></div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"demo-tabs\">\r\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId })} ripple>\r\n                    <Tab>Feed</Tab>\r\n                    <Tab>My</Tab>\r\n                    <Tab>Wiki</Tab>\r\n                </Tabs>\r\n                 <section className=\"projects-grid\">\r\n\t\t\t\t\t <Grid className=\"projects-grid\">\r\n\t\t\t\t\t\t <Cell col={12}>\r\n\t\t\t\t\t\t\t<div className=\"content\">{this.toggleCategories()}</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t </Cell>\r\n\t\t\t\t\t </Grid>\r\n\t\t\t\t\t{/* <div className=\"content\">Content for the tab: {this.state.activeTab}</div> */}\r\n\t\t\t\t</section> \r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default LoggedInMainPage;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport App from './App';\n//import registerServiceWorker from './registerServiceWorker';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n<App />\n\t</BrowserRouter>\n\t, document.getElementById('root'));\n\n\n\n\n"],"sourceRoot":""}